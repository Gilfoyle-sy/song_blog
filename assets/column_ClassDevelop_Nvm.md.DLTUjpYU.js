import{_ as a,c as s,o as n,a4 as e}from"./chunks/framework.DzXn47Ma.js";const _=JSON.parse('{"title":"nvm","description":"","frontmatter":{},"headers":[],"relativePath":"column/ClassDevelop/Nvm.md","filePath":"column/ClassDevelop/Nvm.md"}'),i={name:"column/ClassDevelop/Nvm.md"},t=e(`<h1 id="nvm" tabindex="-1">nvm <a class="header-anchor" href="#nvm" aria-label="Permalink to &quot;nvm&quot;">​</a></h1><p>nvm 全名 node.js version management ，是一个管理多个 nodejs 的版本工具。通过它可以安装和切换不同版本的 nodejs, 为了解决 node.js 各种版本存在不兼容现象可以通过它可以安装和切换不同版本</p><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><p>nvm 安装不同版本 node 后，对应的下载包是相互独立的</p><h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">​</a></h2><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm list</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm use</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm current</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm install</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm unistall</span></span></code></pre></div>`,6),l=[t];function o(p,r,h,c,d,m){return n(),s("div",null,l)}const k=a(i,[["render",o]]);export{_ as __pageData,k as default};
