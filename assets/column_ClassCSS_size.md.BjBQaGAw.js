import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DzXn47Ma.js";const u=JSON.parse('{"title":"尺寸","description":"","frontmatter":{},"headers":[],"relativePath":"column/ClassCSS/size.md","filePath":"column/ClassCSS/size.md"}'),e={name:"column/ClassCSS/size.md"},h=t(`<h1 id="尺寸" tabindex="-1">尺寸 <a class="header-anchor" href="#尺寸" aria-label="Permalink to &quot;尺寸&quot;">​</a></h1><h2 id="px" tabindex="-1">px <a class="header-anchor" href="#px" aria-label="Permalink to &quot;px&quot;">​</a></h2><blockquote><p>对长度单位。像素 px 是相对于<strong>显示器屏幕分辨率</strong>而言的。</p></blockquote><h2 id="em" tabindex="-1">em <a class="header-anchor" href="#em" aria-label="Permalink to &quot;em&quot;">​</a></h2><blockquote><p>相对长度单位。基准点为父节点字体的大小，即相对于当前对象内文本的字体尺寸（继承父节点字体大小）。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸( 16px )。</p></blockquote><h2 id="rem" tabindex="-1">rem <a class="header-anchor" href="#rem" aria-label="Permalink to &quot;rem&quot;">​</a></h2><blockquote><p>相对长度单位。r 是 root 的缩写，相对于根元素 html 的字体大小</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pwidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">prem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsByTagName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> oWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.body.clientWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.documentElement.clientWidth;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  html.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> oWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pwidth\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></blockquote><h2 id="vh-and-vw" tabindex="-1">vh and vw <a class="header-anchor" href="#vh-and-vw" aria-label="Permalink to &quot;vh and vw&quot;">​</a></h2><blockquote><p>相对于视口的高度和宽度，而不是父元素的（CSS 百分比是相对于包含它的最近的父元素的高度和宽度）。 获取视口宽度的 1% const vw = window.innerWidth / 100; 获取视口高度的 1% const vh = window.innerHeight / 100</p></blockquote><h2 id="rpx" tabindex="-1">rpx <a class="header-anchor" href="#rpx" aria-label="Permalink to &quot;rpx&quot;">​</a></h2><blockquote><p>小程序中的视觉单位，1rpx 等于屏幕宽度的 1/750</p></blockquote><h2 id="pt" tabindex="-1">pt <a class="header-anchor" href="#pt" aria-label="Permalink to &quot;pt&quot;">​</a></h2><blockquote><p>设备像素（物理像素），等于 1/72 英寸</p></blockquote><h2 id="dpr" tabindex="-1">dpr <a class="header-anchor" href="#dpr" aria-label="Permalink to &quot;dpr&quot;">​</a></h2><blockquote><p>dpr = 设备像素 / 设备独立像素</p></blockquote>`,15),n=[h];function l(p,k,r,o,d,E){return a(),i("div",null,n)}const g=s(e,[["render",l]]);export{u as __pageData,g as default};
