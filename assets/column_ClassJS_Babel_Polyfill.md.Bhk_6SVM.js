import{_ as l,c as a,o as e,a4 as o}from"./chunks/framework.DzXn47Ma.js";const p=JSON.parse('{"title":"Babel 和 Polyfill","description":"","frontmatter":{},"headers":[],"relativePath":"column/ClassJS/Babel&Polyfill.md","filePath":"column/ClassJS/Babel&Polyfill.md"}'),t={name:"column/ClassJS/Babel&Polyfill.md"},i=o('<h1 id="babel-和-polyfill" tabindex="-1">Babel 和 Polyfill <a class="header-anchor" href="#babel-和-polyfill" aria-label="Permalink to &quot;Babel 和 Polyfill&quot;">​</a></h1><h2 id="babel" tabindex="-1">Babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;Babel&quot;">​</a></h2><blockquote><p>Babel 是一个转译器，把同种语言的高版本规则翻译成低版本规则</p></blockquote><ul><li>像箭头函数，babel 是能处理成 function 这种</li></ul><h2 id="polyfill" tabindex="-1">Polyfill <a class="header-anchor" href="#polyfill" aria-label="Permalink to &quot;Polyfill&quot;">​</a></h2><blockquote><p>用于实现浏览器并不支持的原生 API 的代码</p></blockquote><ul><li>Array.from promise 这些 新的原生 api 方法，是需要引入 polyfill</li></ul>',7),r=[i];function s(c,n,b,_,f,u){return e(),a("div",null,r)}const h=l(t,[["render",s]]);export{p as __pageData,h as default};
