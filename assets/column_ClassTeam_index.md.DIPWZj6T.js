import{_ as a,c as l,o as e,a4 as i}from"./chunks/framework.i35rQw0I.js";const p=JSON.parse('{"title":"前端团队建设","description":"","frontmatter":{},"headers":[],"relativePath":"column/ClassTeam/index.md","filePath":"column/ClassTeam/index.md"}'),t={name:"column/ClassTeam/index.md"},r=i('<h1 id="前端团队建设" tabindex="-1">前端团队建设 <a class="header-anchor" href="#前端团队建设" aria-label="Permalink to &quot;前端团队建设&quot;">​</a></h1><h2 id="核心" tabindex="-1">核心 <a class="header-anchor" href="#核心" aria-label="Permalink to &quot;核心&quot;">​</a></h2><p>团队内部成员应该保持积极，快乐的工作状态。与外部团队应是高效沟通且流程化的合作方式。在整体方面加强团队之前，团队与公司层面的紧密协作，安全有效的完成工作任务</p><h2 id="团队内部" tabindex="-1">团队内部 <a class="header-anchor" href="#团队内部" aria-label="Permalink to &quot;团队内部&quot;">​</a></h2><ul><li>技术选型：制定前端工作框架</li><li>前端工程化：保证团队的代码风格与开发流程的一致性，避免千人千面的屎山代码</li><li>核心模块的编写：保证公司业务核心模块的稳定性</li><li>人员分配：根据人员能力分配对应的工作内容，保证团队的高效运行</li><li>工时评估：制定可量化的工时评估体系，以确保任务的按时完成</li><li>代码评审：发现潜在问题，把控代码质量，提升个人代码水平</li><li>知识分享：鼓励团队成员分享心得与感悟，提升能力</li><li>前端规范&amp;文档库：搭建前端规范与文档库，用来技术沉淀与信息共享</li><li>定期团建：加强团队凝聚力，放松工作压力</li></ul><h2 id="与外部团队" tabindex="-1">与外部团队 <a class="header-anchor" href="#与外部团队" aria-label="Permalink to &quot;与外部团队&quot;">​</a></h2><ul><li>与产品：确定流程，业务场景，方便快速完成产品流程图</li><li>与 UI：确定设计稿规范与 ui 组件的细节，色值，圆角，字体，布局，功能组件，以便开发时定义的全局样式，并方便后期的模块维护与迭代升级</li><li>与后端：制定接口规范，数据格式，状态码。规范的前后端对接流程在开发式避免了重复且无效的沟通，也可快速定位错误位置。</li><li>与测试：制定测试流程，bug 等级划分，测试轮数，修复时间。这样不仅可以保证项目的安全上线，也是对开发人员能力的量化参考。</li></ul><h2 id="前端-leader" tabindex="-1">前端 leader <a class="header-anchor" href="#前端-leader" aria-label="Permalink to &quot;前端 leader&quot;">​</a></h2><p>一个合格的前端 leader 应该包括但不限于以下几点</p><ul><li>技术能力</li><li>业务能力 对业务的精准和本质分析</li><li>沟通能力 与外部团队的协作，能理解对方的意图</li><li>领导能力 有责任有担当的带领团队</li><li>规划能力 团队的人员，工作任务的合理规划安排</li></ul>',10),o=[r];function n(d,s,c,h,_,u){return e(),l("div",null,o)}const f=a(t,[["render",n]]);export{p as __pageData,f as default};
